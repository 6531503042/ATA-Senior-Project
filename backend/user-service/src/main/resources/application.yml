server:
  port: 8081

spring:
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  profiles:
    active: dev
  r2dbc:
    url: r2dbc:postgresql://localhost:3307/user
    username: postgres
    password: 6531503042
    host: localhost
    port: 3307
    database: user
    pool:
      enabled: true
      initial-size: 5
      max-size: 20
  application:
    name: user-service
  data:
    r2dbc:
      repositories:
        enabled: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    url: jdbc:postgresql://localhost:3307/user
    user: postgres
    password: 6531503042
    schemas: public
    create-schemas: true
    clean-disabled: false
  cloud:
    config:
      enabled: false

jwt:
  secret: ofBra2CqJO2JOC7CmN80hbaGdjZJqsBR2UqXxJh5Coo=
  expiration: 86400
  refresh-expiration: 604800

---
spring:
  config:
    activate:
      on-profile: docker
  r2dbc:
    url: r2dbc:postgresql://postgres:3307/user_service
    username: postgres
    password: 6531503042
    host: postgres
    port: 5432
    database: user
    pool:
      enabled: true
      initial-size: 5
      max-size: 20
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    url: jdbc:postgresql://postgres:3307/user
    user: postgres
    password: 6531503042
    schemas: public
    create-schemas: true
    clean-disabled: false

jwt:
  secret: ${JWT_SECRET:ofBra2CqJO2JOC7CmN80hbaGdjZJqsBR2UqXxJh5Coo=}
  expiration: ${JWT_EXPIRATION:86400}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800}

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.springframework.security: DEBUG
    org.springframework.r2dbc: DEBUG
    org.springframework.data.r2dbc: DEBUG
    io.r2dbc.postgresql: DEBUG
    org.flywaydb: DEBUG
    dev.bengi.userservice: DEBUG
    dev.bengi.userservice.controller: DEBUG
    dev.bengi.userservice.service: DEBUG
    dev.bengi.userservice.config.security: DEBUG
    dev.bengi.userservice.config.security.jwt: DEBUG
    dev.bengi.userservice.config.security.userPrinciple: DEBUG
    com.netflix.discovery: DEBUG
    org.springframework.cloud.netflix.eureka: DEBUG
    org.springframework.web.reactive: DEBUG

refresh:
  token:
    url: http://localhost:8081/api/auth/refresh

cors:
  allowed-origins: 
    - http://localhost:3000
    - http://127.0.0.1:3000
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
  allowed-headers: 
    - Authorization
    - Content-Type
    - X-Requested-With
    - Accept
    - Origin
    - Access-Control-Request-Method
    - Access-Control-Request-Headers
    - Refresh-Token
  exposed-headers: 
    - Authorization
    - Refresh-Token
  allow-credentials: true
  max-age: 3600

springdoc:
  api-docs:
    path: /api-docs
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
    syntaxHighlight:
      activated: true

app:
  frontend-url: http://localhost:3000
  reset-password:
    token:
      expiration: 900000

eureka:
  client:
    enabled: true
    eureka-service-url-poll-interval-seconds: 10
    service-url:
      defaultZone: http://localhost:8087/eureka/
    register-with-eureka: true
    fetch-registry: true
    eureka-server-connect-timeout-seconds: 5
    eureka-server-read-timeout-seconds: 8
    eureka-server-port: 8087
    eureka-server-d-n-s-name: localhost
    eureka-server-u-r-l-context: eureka
    region: default
    registry-fetch-interval-seconds: 5
  instance:
    prefer-ip-address: true
    hostname: localhost
    non-secure-port: 8081
    home-page-url: http://localhost:8081
    status-page-url: http://localhost:8081/actuator/info
    health-check-url: http://localhost:8081/actuator/health
    lease-renewal-interval-in-seconds: 10
    
ribbon:
  eureka:
    enabled: true
  ServerListRefreshInterval: 1000
