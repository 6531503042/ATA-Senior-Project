server:
  port: 8081
spring:
  main:
    allow-bean-definition-overriding: true
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:3307/user
    username: postgres
    password: 6531503042
  application:
    name: user-service
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    open-in-view: false
    properties:
      hibernate:
        format_sql: true

jwt:
  secret: ofBra2CqJO2JOC7CmN80hbaGdjZJqsBR2UqXxJh5Coo=
  expiration: 86400
  refresh-expiration: 604800

# Token refresh endpoint URL
refresh:
  token:
    url: http://localhost:8081/api/auth/refresh

# CORS configuration
cors:
  allowed-origins: 
    - http://localhost:3000
    - http://127.0.0.1:3000
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
  allowed-headers: 
    - Authorization
    - Content-Type
    - X-Requested-With
    - Accept
    - Origin
    - Access-Control-Request-Method
    - Access-Control-Request-Headers
    - Refresh-Token
  exposed-headers: 
    - Authorization
    - Refresh-Token
  allow-credentials: true
  max-age: 3600

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
    syntaxHighlight:
      activated: true

# Email Configuration
spring.mail:
  host: smtp.gmail.com
  port: 587
  username: your-email@gmail.com
  password: your-app-specific-password
  properties:
    mail.smtp:
      auth: true
      starttls.enable: true

# Frontend URL for password reset
app:
  frontend-url: http://localhost:3000
  reset-password:
    token:
      expiration: 900000

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8087/eureka/
