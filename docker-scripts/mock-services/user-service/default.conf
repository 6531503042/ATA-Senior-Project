server {
    listen 80;
    server_name localhost;
    
    # Enable CORS for preflight OPTIONS requests
    location ~ ^/(.*) {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' '0';
            return 204;
        }
    }
    
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Fixed health check endpoint
    location = /health {
        add_header Content-Type application/json;
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        return 200 '{"status":"UP"}';
    }

    # Add support for /api/auth/login endpoint the frontend is actually using
    location = /api/auth/login {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        default_type application/json;
        # Adding required Authorization and Refresh-Token headers
        add_header 'Authorization' 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c' always;
        add_header 'Refresh-Token' 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJyZWZyZXNoIiwibmFtZSI6IlJlZnJlc2ggVG9rZW4iLCJpYXQiOjE1MTYyMzkwMjJ9.iNyZSu9e0YxBdx35F3LYgMu-rHB8BYIJWgUQOOwsQTM' always;
        
        # Changed the response to include user_info format expected by frontend
        return 200 '{
            "user_info": {
                "id": 123,
                "username": "admin",
                "email": "admin@example.com",
                "fullname": "Admin User",
                "roles": ["ROLE_ADMIN"]
            },
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        }';

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization, Refresh-Token' always;
    }

    # Handle preflight OPTIONS requests
    location ~ ^/(api|health) {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

#     # API mock endpoints - Fix the manager list endpoint
#     location = /api/manager/list {
#         default_type application/json;
        
#         # Handle OPTIONS request first
#         if ($request_method = 'OPTIONS') {
#             add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
#             add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
#             add_header 'Access-Control-Allow-Credentials' 'true' always;
#             add_header 'Content-Type' 'text/plain charset=UTF-8';
#             add_header 'Content-Length' 0;
#             return 204;
#         }
        
#         # Response for GET request
#         return 200 '[{"id":1,"name":"John Doe","email":"john@example.com","role":"ADMIN"},{"id":2,"name":"Jane Smith","email":"jane@example.com","role":"MANAGER"},{"id":3,"name":"Bob Johnson","email":"bob@example.com","role":"MANAGER"},{"id":4,"name":"Alice Williams","email":"alice@example.com","role":"MANAGER"},{"id":5,"name":"Charlie Brown","email":"charlie@example.com","role":"MANAGER"}]';

#         # CORS headers - always apply these
#         add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
#         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#     }

#     # Additional users endpoint for listing employees
#     location /api/users/employees {
#         default_type application/json;
        
#         # Handle OPTIONS request first
#         if ($request_method = 'OPTIONS') {
#             add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
#             add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
#             add_header 'Access-Control-Allow-Credentials' 'true' always;
#             add_header 'Content-Type' 'text/plain charset=UTF-8';
#             add_header 'Content-Length' 0;
#             return 204;
#         }
        
#         # Response for GET request
#         return 200 '[{"id":101,"name":"Employee One","email":"emp1@example.com","role":"EMPLOYEE"},{"id":102,"name":"Employee Two","email":"emp2@example.com","role":"EMPLOYEE"},{"id":103,"name":"Employee Three","email":"emp3@example.com","role":"EMPLOYEE"},{"id":104,"name":"Employee Four","email":"emp4@example.com","role":"EMPLOYEE"},{"id":105,"name":"Employee Five","email":"emp5@example.com","role":"EMPLOYEE"}]';

#         # CORS headers - always apply these
#         add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
#         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#     }

#     location /api/v1/auth/login {
#         default_type application/json;
#         # Adding required Authorization and Refresh-Token headers
#         add_header 'Authorization' 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c' always;
#         add_header 'Refresh-Token' 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJyZWZyZXNoIiwibmFtZSI6IlJlZnJlc2ggVG9rZW4iLCJpYXQiOjE1MTYyMzkwMjJ9.iNyZSu9e0YxBdx35F3LYgMu-rHB8BYIJWgUQOOwsQTM' always;
        
#         # Changed the response to include user_info format expected by frontend
#         return 200 '{
#             "user_info": {
#                 "id": 123,
#                 "username": "admin",
#                 "email": "admin@example.com",
#                 "fullname": "Admin User",
#                 "roles": ["ROLE_ADMIN"]
#             },
#             "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
#         }';

#         # CORS headers
#         add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
#         add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Authorization' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#         add_header 'Access-Control-Expose-Headers' 'Authorization, Refresh-Token' always;
#     }

#     location /api/v1/auth/register {
#         default_type application/json;
#         return 201 '{"userId": "456", "message": "User registered successfully"}';

#         # CORS headers
#         add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
#         add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Authorization' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#     }

#     location /api/v1/users/profile {
#         default_type application/json;
#         return 200 '{"userId": "123", "username": "admin", "email": "admin@example.com", "firstName": "Admin", "lastName": "User", "role": "ADMIN"}';

#         # CORS headers
#         add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
#         add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Authorization' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#     }

#     location /api/v1/auth/validate-token {
#         default_type application/json;
#         return 200 '{"valid": true, "userId": "123", "role": "ADMIN"}';

#         # CORS headers
#         add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
#         add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Authorization' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#     }

#     # Add token validation endpoint
#     location = /api/auth/validate {
#         default_type application/json;
#         # CORS headers
#         add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
#         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#         return 200 '{"valid": true, "user_info": {"id": 123, "username": "admin", "email": "admin@example.com", "fullname": "Admin User", "roles": ["ROLE_ADMIN"]}}';
#     }

#     # Add token refresh endpoint
#     location = /api/auth/refresh {
#         default_type application/json;
#         # Adding required Authorization and Refresh-Token headers
#         add_header 'Authorization' 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJuZXd0b2tlbiIsIm5hbWUiOiJKb2huIERvZSIsImlhdCI6MTUxNjIzOTAyMn0.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c' always;
#         add_header 'Refresh-Token' 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJuZXdyZWZyZXNoIiwibmFtZSI6IlJlZnJlc2ggVG9rZW4iLCJpYXQiOjE1MTYyMzkwMjJ9.iNyZSu9e0YxBdx35F3LYgMu-rHB8BYIJWgUQOOwsQTM' always;
#         # CORS headers
#         add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
#         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With, Refresh-Token' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#         add_header 'Access-Control-Expose-Headers' 'Authorization, Refresh-Token' always;
#         return 200 '{"valid": true}';
#     }

#     # Generic handler for all user service API endpoints
#     location ~ ^/api/ {
#         default_type application/json;
        
#         # Handle OPTIONS request first
#         if ($request_method = 'OPTIONS') {
#             add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
#             add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
#             add_header 'Access-Control-Allow-Credentials' 'true' always;
#             add_header 'Content-Type' 'text/plain charset=UTF-8';
#             add_header 'Content-Length' 0;
#             return 204;
#         }

#         # List managers
#         if ($request_uri ~ "^/api/manager/list") {
#             return 200 '[{"id":1,"name":"John Doe","email":"john@example.com","role":"ADMIN"},{"id":2,"name":"Jane Smith","email":"jane@example.com","role":"MANAGER"},{"id":3,"name":"Bob Johnson","email":"bob@example.com","role":"MANAGER"},{"id":4,"name":"Alice Williams","email":"alice@example.com","role":"MANAGER"},{"id":5,"name":"Charlie Brown","email":"charlie@example.com","role":"MANAGER"}]';
#         }

#         # List employees
#         if ($request_uri ~ "^/api/users/employees") {
#             return 200 '[{"id":101,"name":"Employee One","email":"emp1@example.com","role":"EMPLOYEE"},{"id":102,"name":"Employee Two","email":"emp2@example.com","role":"EMPLOYEE"},{"id":103,"name":"Employee Three","email":"emp3@example.com","role":"EMPLOYEE"},{"id":104,"name":"Employee Four","email":"emp4@example.com","role":"EMPLOYEE"},{"id":105,"name":"Employee Five","email":"emp5@example.com","role":"EMPLOYEE"}]';
#         }

#         # Default response for other API endpoints
#         return 200 '{"status": "success", "message": "Mocked API response"}';

#         # CORS headers - always apply these
#         add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
#         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#     }
# } 